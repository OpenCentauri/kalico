name: Build MCU

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        run: |
          mkdir result
          sudo apt update
          sudo apt install -y sudo git curl python3 python3-dev python3-venv libffi-dev build-essential gcc-avr avr-libc libnewlib-arm-none-eabi gcc-arm-none-eabi binutils-arm-none-eabi nodejs npm

      - uses: actions/checkout@v4

      - name: Build SKR MCU
        run: |
          cp mcu/skr-mini-v3-config .config
          make
          cp out/klipper.bin result/skr-mini-v3.bin
          make clean
      
      - name: Build Hotend MCU
        run: |
          cp mcu/hotend-config .config
          make
          cp out/klipper.bin result/hotend.bin
          make clean
      
      - name: Build Bed MCU
        run: |
          cp mcu/bed-config .config
          make
          cp out/klipper.bin result/bed.bin
          make clean
      
      - uses: actions/upload-artifact@v4
        with:
          name: mcu-binaries
          path: result/*

  build-32bit:
    runs-on: ubuntu-latest
    container: i386/debian
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        run: |
          mkdir result
          sudo apt update
          sudo apt install -y sudo git curl python3 python3-dev python3-venv libffi-dev build-essential gcc-avr avr-libc libnewlib-arm-none-eabi gcc-arm-none-eabi binutils-arm-none-eabi

      - name: Build Linux process
        run: |
          cp mcu/process-config .config
          make
          cp out/klipper.elf result/32bit.elf
          make clean
      
      - uses: actions/upload-artifact@v4
        with:
          name: linux-binaries
          path: result/*